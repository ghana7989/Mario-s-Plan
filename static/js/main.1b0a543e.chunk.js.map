{"version":3,"sources":["store/actions/authActions.js","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","registerServiceWorker.js","store/reducers/projectReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","error","connect","signOut","props","className","to","onClick","href","inits","state","console","log","firebase","profile","initials","links","uid","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","createdAt","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownParams","match","params","data","authorLastName","SignIn","handleChange","e","setState","target","value","handleSubmit","preventDefault","authError","history","push","autoComplete","onSubmit","htmlFor","onChange","ownProps","SignUp","signUp","firstName","lastName","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","err","CreateProject","createProject","extraArguments","authorId","currentdate","Date","date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","add","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initState","projectReducer","action","initialState","authReducer","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","ReactReduxFirebaseProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1b0a543e.chunk.js","sourcesContent":["export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({\r\n                type: \"LOGIN_SUCCESS\"\r\n            })\r\n        }).catch((error) => {\r\n            dispatch({\r\n                type: \"LOGIN_ERROR\", error\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n\r\n        firebase.auth().signOut()\r\n            .then(\r\n                () => {\r\n                    dispatch({ type: \"SIGN_OUT\" })\r\n                }\r\n            )\r\n    }\r\n}\r\n\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        // Signing up a new User\r\n        firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n            .then((res) => {\r\n                return firestore.collection(\"users\").doc(res.user.uid).set({\r\n                    firstName: newUser.firstName,\r\n                    lastName: newUser.lastName,\r\n                    initials: newUser.firstName[0] + newUser.lastName[0]\r\n                })\r\n            }).then(() => {\r\n                dispatch({\r\n                    type: \"SIGNUP_SUCCESSFUL\"\r\n                })\r\n            }).catch(err=>{\r\n                dispatch({\r\n                    type:\"SIGNUP_FAILED\",\r\n                    err \r\n                })\r\n            })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from \"../../store/actions/authActions\"\r\n\r\nconst SignedInLinks = (props) => {\r\n// firebase.profile.initials\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to=\"/create\">New Project</NavLink>\r\n            </li>\r\n            <li>\r\n                <a onClick={props.signOut} href=\"/signin\">Log Out</a>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.inits}</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {signIn} from \"../../store/actions/authActions\"\r\nconst SignedOutLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to=\"/signup\">Sign Up</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/signin\">Login</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        signOut: ()=>dispatch(signIn())\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps) (SignedOutLinks)","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from \"./SignedOutLinks\"\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const { auth,inits } = props\r\n    const links = auth.uid ? <SignedInLinks inits={inits}></SignedInLinks> : <SignedOutLinks></SignedOutLinks>\r\nreturn (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n        <div className=\"container\">\r\n            <Link to=\"/\" className=\"brand-logo\">\r\n                Mario Plan\r\n                </Link>\r\n            {links}\r\n        </div>\r\n    </nav>\r\n)\r\n}\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n\r\n    return {\r\n        auth: state.firebase.auth,\r\n        inits: state.firebase.profile.initials\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react';\r\nimport moment from 'moment';\r\nconst Notifications = ({ notifications }) => {\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">\r\n                        Notifications\r\n                    </span>\r\n                    <ul className=\"notifications\">\r\n                        {\r\n                            notifications && notifications.map(notification => {\r\n                                return (\r\n                                    <li key={notification.id}>\r\n                                        <span className=\"pink-text\">\r\n                                            {notification.user + \" \"}\r\n                                        </span>\r\n                                        <span>\r\n                                            {notification.content}\r\n                                        </span>\r\n                                        <div className=\"grey-text note-date\">\r\n                                            {\r\n                                                moment(notification.time.toDate()).fromNow()\r\n                                            }\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">\r\n                        {project.title}\r\n                    </span>\r\n                    <p>Posted by {project.authorFirstName}</p>\r\n                    <p className=\"grey-text\">\r\n                        {project.createdAt}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {\r\n                projects && projects.map(project => {\r\n                    return (\r\n                        <Link key={project.id} to={`project/${project.id}`}>\r\n                            <ProjectSummary project={project} key={project.id}></ProjectSummary>\r\n                        </Link>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    render() {\r\n        // console.log(this.props)\r\n        const { projects, auth, notifications } = this.props\r\n        if (!auth.uid) {\r\n            return <Redirect to=\"/signin\" />\r\n        }\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect(\r\n        [\r\n            {\r\n                collection: \"projects\",\r\n                orderBy: [\"createdAt\", \"desc\"]\r\n            },\r\n            {\r\n                collection: \"notifications\",\r\n                limit: 3,\r\n                orderBy: [\"time\", \"desc\"]\r\n            }\r\n        ])\r\n)(Dashboard);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nfunction ProjectDetails(props) {\r\n    const { project, auth } = props;\r\n    if (!auth.uid) {\r\n        return <Redirect to=\"/signin\" />\r\n    }\r\n    if (project) {\r\n        console.log(props.project.createdAt)\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted By The Author {project.authorFirstName + \" \" + project.authorLastName}</div>\r\n                        <div>{project.createdAt}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container\">\r\n                <p>Loading.....</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownParams) => {\r\n    const id = ownParams.match.params.id;\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps), firestoreConnect([{\r\n    collection: \"projects\"\r\n}]))(ProjectDetails)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from \"../../store/actions/authActions\"\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\"\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        // console.log(e);\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.signIn(this.state)\r\n        if (!this.props.authError) {\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        if (auth.uid) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <form autoComplete=\"off\" onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">\r\n                        Sign In\r\n                    </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn lighten-1 pink z-depth-0\">\r\n                            Login\r\n                        </button>\r\n                    </div>\r\n                        <div className=\"red-text center\">\r\n                            {\r\n                                authError ? <p>{authError}</p> : null\r\n                            }\r\n                        </div>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        signIn: (credentials) => dispatch(signIn(credentials))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import { Redirect } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\"\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        // console.log(e);\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props\r\n        if (auth.uid) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <form autoComplete=\"off\" onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">\r\n                        Sign Up\r\n                    </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input autoComplete=\"off\" type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn lighten-1 pink z-depth-0\">\r\n                            Sign Up\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {\r\n                            authError ? <p>{authError}</p> : null\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass CreateProject extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"\",\r\n            content: \"\"\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        // console.log(e);\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // console.log(this.state)\r\n        this.props.createProject(this.state)\r\n        this.props.history.push(\"/\")\r\n    }\r\n    render() {\r\n        const {auth} = this.props\r\n        if (!auth.uid) {\r\n            return <Redirect to=\"/signin\" />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <form autoComplete=\"off\" onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">\r\n                        Create Project\r\n                    </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea\r\n                            className=\"materialize-textarea\"\r\n                            type=\"text\"\r\n                            id=\"content\"\r\n                            onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn lighten-1 pink z-depth-0\">\r\n                            Create\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);  ","export const createProject = (project) => {\r\n    // We get extraArguments from index.js via thunk in this function\r\n    return (dispatch, getState, extraArguments) => {\r\n        const { getFirestore } = extraArguments\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n        const firestore = getFirestore();\r\n        const currentdate = new Date()\r\n        const date = currentdate.getDate() + \"/\"\r\n            + (currentdate.getMonth() + 1) + \"/\"\r\n            + currentdate.getFullYear() + \" @ \"\r\n            + currentdate.getHours() + \":\"\r\n            + currentdate.getMinutes() + \":\"\r\n            + currentdate.getSeconds();\r\n        // Some Async Function Call\r\n        firestore.collection(\"projects\").add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: date\r\n        }).then(() => {\r\n            dispatch({\r\n                type: \"CREATE_PROJECT\",\r\n                project: project\r\n            })\r\n        }).catch(err => {\r\n            dispatch(\r\n                { type: \"CREATE_PROJECT_ERROR\", err }\r\n            )\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\n\n// -------------------------------------------//\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar></Navbar>\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard}></Route>\n            <Route exact component={ProjectDetails} path=\"/project/:id\"></Route>\n            <Route path=\"/signin\" exact component={SignIn}></Route>\n            <Route exact path=\"/signup\" component={SignUp}></Route>\n            <Route exact path=\"/create\" component={CreateProject}></Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nconst initState = {\r\n    projects: [\r\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\r\n    ]\r\n}\r\n\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"CREATE_PROJECT\":\r\n            console.log(\"Created Project\", action.project)\r\n            return state;\r\n        case \"CREATE_PROJECT_ERROR\":\r\n            console.log(\"Create Project Errror\", action.err)\r\n            break\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default projectReducer;","\r\nconst initialState = {\r\n    authError: null\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_ERROR\":\r\n            return {\r\n                ...state,\r\n                authError: \"Login failed\"\r\n            }\r\n        case \"LOGIN_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case \"SIGN_OUT\":\r\n            return {\r\n                state\r\n            }\r\n        case \"SIGNUP_SUCCESSFUL\":\r\n            console.log(\"SignUp Success\")\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case \"SIGNUP_FAILED\":\r\n            console.log(\"SignUp Failed\", action.err.message)\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n\r\n        default:\r\n            return {\r\n                state\r\n            }\r\n    }\r\n}\r\n\r\nexport default authReducer","import { combineReducers } from \"redux\"\r\nimport projectReducer from \"./projectReducer\"\r\nimport authReducer from \"./authReducer\"\r\nimport { firestoreReducer } from \"redux-firestore\"\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\n// firestoreReducer is for connecting redux with firestore so that we can use firestore database in state\r\n// firebaseReducer is for syncing redux ourstore state with firebase Authentication\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\"\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBsdlcPWPYHuh5uYBmeqmNUk0bpmv5Dupk\",\r\n    authDomain: \"marioplan-ca3b1.firebaseapp.com\",\r\n    databaseURL: \"https://marioplan-ca3b1.firebaseio.com\",\r\n    projectId: \"marioplan-ca3b1\",\r\n    storageBucket: \"marioplan-ca3b1.appspot.com\",\r\n    messagingSenderId: \"910394154614\",\r\n    appId: \"1:910394154614:web:3d0c9b3bf597c9889c4957\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from \"redux-thunk\"\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from \"redux-firestore\"\nimport { getFirebase, ReactReduxFirebaseProvider, isLoaded } from \"react-redux-firebase\"\nimport fbConfig from \"./config/fbConfig\"\nimport firebase from \"firebase/app\"\n\nconst store = createStore(rootReducer,\n    compose(\n        // These are Enhancers and compose is used to bind them just like rootreducer binds all the reducers\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(firebase, fbConfig),\n    )\n)\nconst ReactReduxFirebaseConfig = {\n\n    userProfile: \"users\",\n    useFirestoreForProfile: true\n}\nconst ReactReduxFirebaseProps = {\n    firebase,\n    config: ReactReduxFirebaseConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n}\nfunction AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return null\n    return children\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...ReactReduxFirebaseProps}>\n            <AuthIsLoaded>\n                <App />\n            </AuthIsLoaded>\n        </ReactReduxFirebaseProvider>\n    </Provider>\n    , document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}